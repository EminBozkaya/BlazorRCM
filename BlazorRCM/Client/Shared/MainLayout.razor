@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <div Style="color:white"><MudBreadcrumbs Items="_items"></MudBreadcrumbs></div>
        <MudSpacer />
        <MudIconButton><MudAvatar id="getir" Image="MyImages/Layout/Getir_icon.ico"/></MudIconButton>
        <MudIconButton><MudAvatar id="yemekSepeti" Image="MyImages/Layout/yemekSepeti.ico"/></MudIconButton>
        <MudIconButton Icon="fas fa-solid fa-user" Color="Color.Inherit"></MudIconButton>
        <MudSwitch @bind-Checked="@_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool" Label="Koyu Mod"/>
    </MudAppBar>


    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader Style="justify-content:center">
            <MudImage Src="MyImages/Layout/oncu.png" Alt="Mony the dog" Elevation="10" Height="150" Class="rounded-circle"/>
        </MudDrawerHeader>


        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _isDarkMode;
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Hızlı Satış", href: null, icon: @Icons.Filled.Restaurant),
        new BreadcrumbItem("Paket Satışı", href: null, icon: @Icons.Filled.DeliveryDining),
    };

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    

    [CascadingParameter]
    public Task<AuthenticationState>? AuthState { get; set; }

    [Inject]
    ILocalStorageService? LocalStorageService { get; set; }

    [Inject]
    NavigationManager? NavigationManager { get; set; }

    private String logingUserName = "Lütfen Giriş Yapınız";


    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthState!;

        if (authState.User.Identity!.IsAuthenticated)
        {
            //authState.User.Claims.FirstOrDefault(i => i.ValueType == ClaimTypes.EMail);

            logingUserName = await LocalStorageService!.GetItemAsStringAsync("fullname");
        }
        else
        {
            NavigationManager!.NavigateTo("/login");
        }
    }


}
